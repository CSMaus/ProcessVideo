<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <FontFamily x:Key="StyleFontFamily">Palatino</FontFamily>
    <sys:Double x:Key="StandardFontSize">12</sys:Double>

    <!-- Take the icons now from: https://www.iconarchive.com/search?q=Metal+Folder+Icon&page=2-->

    <!-- DarkColorPalette -->
    <SolidColorBrush x:Key="Foreground">#113B7A</SolidColorBrush>
    <SolidColorBrush x:Key="BordersBrush">#B4D4FF</SolidColorBrush>
    <SolidColorBrush x:Key="MainBackground">#F5FAFF</SolidColorBrush>

    <SolidColorBrush x:Key="SscanBackground">#E4F1FF</SolidColorBrush>
    <SolidColorBrush  x:Key="AScanLineColor">#394054</SolidColorBrush>

    <SolidColorBrush x:Key="Background">#F5FAFF</SolidColorBrush>
    <SolidColorBrush x:Key="OnPressed">#86B6F6</SolidColorBrush>
    <SolidColorBrush x:Key="OnSelected">#B4D4FF</SolidColorBrush>
    <SolidColorBrush x:Key="ScrollBarColor">#86B6F6</SolidColorBrush>
    <SolidColorBrush x:Key="GradientM">#B0CDF5</SolidColorBrush>
    <Color x:Key="Gradient1">#B4D4FF</Color>
    <Color x:Key="Gradient2">#EEF5FF</Color>

    <SolidColorBrush x:Key="BordersBrushDataGrid">#86B6F6</SolidColorBrush>
    <SolidColorBrush x:Key="RowBackground">#B4D4FF</SolidColorBrush>
    <SolidColorBrush x:Key="AlternatingRowBackground">#EEF5FF</SolidColorBrush>


    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource MainBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BordersBrush}"/>
        <Setter Property="BorderThickness" Value="1, 1, 1, 1"/>
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BordersBrushDataGrid}" />
        <!-- Might be error here-->
        <Setter Property="RowBackground" Value="{DynamicResource RowBackground}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource AlternatingRowBackground}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <!-- <Setter Property="GridLinesVisibility" Value="Horizontal" />-->
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="True"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
                    <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                    <Setter Property="Background" Value="{DynamicResource BordersBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource BordersBrushDataGrid}" />
                    <!-- Might be error here-->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridColumnHeader">
                                <Grid>
                                    <Border x:Name="border" Background="{DynamicResource BordersBrush}" BorderBrush="{DynamicResource BordersBrush}" BorderThickness="0,1,1,1" CornerRadius="0">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Width="4" Cursor="SizeWE"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource OnPressed}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True" >
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource OnSelected}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BordersBrush}" />
        <Setter Property="BorderThickness" Value="1, 0, 0, 1"/>
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="5" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource OnSelected}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource BordersBrush}" />
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource BordersBrush}" BorderThickness="1" CornerRadius="2" Width="20" Height="20" VerticalAlignment="Center">
                            <Path x:Name="CheckMarkPath" Stroke="{DynamicResource Foreground}" StrokeThickness="2" SnapsToDevicePixels="True" Visibility="Collapsed" Data="M 2,8 L 8,16 L 16,4" />
                        </Border>

                        <ContentPresenter Grid.Column="1" Margin="5,0,0,0" VerticalAlignment="Center" Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnSelected}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMarkPath" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{DynamicResource BordersBrush}" BorderThickness="1" CornerRadius="5">
                        <Grid>
                            <Border  BorderBrush="{DynamicResource BordersBrush}" BorderThickness="0" CornerRadius="5">
                                <Rectangle x:Name="backgroundRectangle" RadiusX="5" RadiusY="5">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="{DynamicResource Gradient2}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource Gradient1}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Rectangle x:Name="overlayRectangle" Fill="Transparent" RadiusX="5" RadiusY="5"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overlayRectangle" Property="Fill" Value="{DynamicResource OnSelected}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="overlayRectangle" Property="Fill" Value="{DynamicResource OnPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                            <Setter TargetName="overlayRectangle" Property="Fill" Value="{DynamicResource Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnSideStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource BordersBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource BordersBrush}" BorderThickness="0" CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnSelected}" />
                            <!-- #6B6E7C -->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnPressed}" />
                            <!-- #6B6E7C -->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkTabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="BorderThickness" Value="1, 0, 0, 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Background}" />
        <!--here BorderBrush is Background -->
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- This row will host the tab headers -->
                            <RowDefinition Height="*"/>
                            <!-- This row will host the content -->
                        </Grid.RowDefinitions>
                        <TabPanel Grid.Row="0" x:Name="HeaderPanel" Panel.ZIndex="1" Background="Transparent" IsItemsHost="True" />
                        <Border Grid.Row="1" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TabStripPlacement" Value="Top" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="TabItem">
                    <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                    <Setter Property="Background" Value="{DynamicResource Background}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource BordersBrush}" />
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" 
                                    CornerRadius="3,3,7,7" Margin="-5, 0, -5, 0">
                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,3"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,0" />
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=Background}"/>
                                        <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Bold" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource OnSelected}" />
                                        <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1" />
                                        <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Regular" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource RowBackground}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                                        <!-- 9E9E9E-->
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource Background}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkTabControlStyleVertical" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="{DynamicResource Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TabPanel Grid.Column="0" x:Name="HeaderPanel" Panel.ZIndex="1" Background="Transparent" IsItemsHost="True"/>
                        <Border Grid.Column="1" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0,10"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="TabItem">
                    <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                    <Setter Property="Background" Value="{DynamicResource Background}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource RowBackground}" />
                    <Setter Property="MinHeight" Value="30" />
                    <Setter Property="MinWidth" Value="20" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="1.5"
                                 Margin="2,12"
                                 HorizontalAlignment="Left">
                                    <ContentPresenter x:Name="ContentSite" 
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Left" 
                                       ContentSource="Header" 
                                       Margin="10,3"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1" />
                                        <Setter Property="Background" 
                                         Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=Background}"/>
                                        <!--<Setter Property="Background" Value="#888"/>-->
                                        <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource Foreground}" />
                                        <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Bold" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                                        <Setter Property="Background" Value="{DynamicResource MainBackground}" />
                                        <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1" />
                                        <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Regular" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource MainBackground}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource OnPressed}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource Background}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkTabControlStyle2" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="BorderThickness" Value="1, 0, 0, 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Grid.Row="0" x:Name="HeaderPanel" Panel.ZIndex="1" Background="Transparent" IsItemsHost="True" />
                        <Border Grid.Row="1" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TabStripPlacement" Value="Top" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="TabItem">
                    <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                    <Setter Property="Background" Value="{DynamicResource Background}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource BordersBrush}" />
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" 
                                    CornerRadius="0.1, 0, 0, 0.1">
                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,3"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <!-- Selected State -->
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="border" Property="BorderThickness" Value="0,1.5,0,0" />
                                        <Setter Property="Background" Value="{DynamicResource GradientM}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource OnPressed}"/>
                                        <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Regular" />
                                    </Trigger>

                                    <!-- Unselected State -->
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource BordersBrush}"/>
                                        <Setter TargetName="border" Property="BorderThickness" Value="0" />
                                        <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Regular" />
                                    </Trigger>

                                    <!-- Hover State -->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource BordersBrush}"/>
                                        <Setter TargetName="border" Property="BorderThickness" Value="0" />
                                    </MultiTrigger>

                                    <!-- Disabled State -->
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource Background}" />
                                        <Setter Property="Background" Value="{DynamicResource BordersBrush}"/>
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource Background}" />
                                        <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,0" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Slider">
        <Setter Property="Background" Value="{DynamicResource Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="TickPlacement" Value="BottomRight"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
    </Style>


    <Style x:Key="GradientGridSplitterStyleH" TargetType="{x:Type GridSplitter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border Background="{TemplateBinding Background}">
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="{DynamicResource Gradient1}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource Gradient2}" Offset="0.5" />
                                    <GradientStop Color="{DynamicResource Gradient1}" Offset="1.0" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GradientGridSplitterStyleV" TargetType="{x:Type GridSplitter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border Background="{TemplateBinding Background}">
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="{DynamicResource Gradient1}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource Gradient2}" Offset="0.5" />
                                    <GradientStop Color="{DynamicResource Gradient1}" Offset="1.0" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <!--<Color x:Key="ControlLightColor">{DynamicResource Foreground}</Color>-->
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#6B6E7C</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
              EndPoint="0.5,1"
              StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource Gradient2}"
         Offset="0" />
        <GradientStop Color="{DynamicResource Gradient1}"
         Offset="0.5" />
        <GradientStop Color="{DynamicResource Gradient2}"
         Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
              StartPoint="0,0"
              EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
             Offset="0" />
                <GradientStop Color="#600000FF"
             Offset="0.4" />
                <GradientStop Color="#600000FF"
             Offset="0.6" />
                <GradientStop Color="#000000FF"
             Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>



    <Style x:Key="DarkRoundedScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="1" 
                     BorderThickness="1" 
                     CornerRadius="2" 
                     Background="{DynamicResource ScrollBarColor}" 
                     BorderBrush="{DynamicResource ScrollBarColor}">
                            <!-- Might be error here-->
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                        Value="{TemplateBinding VerticalOffset}"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                        Value="{TemplateBinding HorizontalOffset}"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        Background="{DynamicResource AlternatingRowBackground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Combobox -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2"
             CornerRadius="0"
             Background="{DynamicResource MainBackground}"
             BorderBrush="{DynamicResource BordersBrush}"
             BorderThickness="1" />
            <Border Grid.Column="0"
             CornerRadius="0" 
             Margin="1" 
             Background="{DynamicResource MainBackground}" 
             BorderBrush="{DynamicResource BordersBrush}"
             BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow"
           Grid.Column="1"     
           Fill="{DynamicResource Foreground}"
           HorizontalAlignment="Center"
           VerticalAlignment="Center"
           Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ToggleBtnStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="{DynamicResource ScrollBarColor}" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource ScrollBarColor}" BorderThickness="1" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnSelected}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource OnPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource BordersBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="FontFamily" Value="Comic"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                               Template="{StaticResource ComboBoxToggleButton}" 
                               Grid.Column="2" 
                               Focusable="false"
                               IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                               ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  
                                   Content="{TemplateBinding SelectionBoxItem}"
                                   ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                   ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                   Margin="3,3,23,3"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                          Style="{x:Null}" 
                          Template="{StaticResource ComboBoxTextBox}" 
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Center" 
                          Margin="3,3,23,3"
                          Focusable="True" 
                          Background="{DynamicResource MainBackground}"
                          Foreground="{DynamicResource Foreground}"
                          Visibility="Hidden"
                          IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Slide">
                            <Grid Name="DropDown"
                           SnapsToDevicePixels="True"                
                           MinWidth="{TemplateBinding ActualWidth}"
                           MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                Background="{DynamicResource Background}"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource BordersBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FontSize" Value="{DynamicResource StandardFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                     Padding="2"
                     SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource OnSelected}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for the ScrollViewer -->
    <SolidColorBrush x:Key="SelectedForegroundBrush"
          Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush"
          Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush"
          Color="#444" />
    <SolidColorBrush x:Key="NormalBrush"
          Color="#888" />

    <Style x:Key="ScrollBarLineButton"
TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
     Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
     Value="True" />
        <Setter Property="OverridesDefaultStyle"
     Value="true" />
        <Setter Property="Focusable"
     Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                 Margin="1"
                 CornerRadius="2"
                 Background="{DynamicResource ScrollBarColor}"
                 BorderBrush="{DynamicResource BordersBrush}"
                 BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Fill="{StaticResource GlyphBrush}"
                   Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                      Value="true">
                            <Setter TargetName="Border"
                         Property="Background"
                         Value="{DynamicResource OnPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                      Value="false">
                            <Setter Property="Foreground"
                         Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton"
TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
     Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
     Value="True" />
        <Setter Property="OverridesDefaultStyle"
     Value="true" />
        <Setter Property="IsTabStop"
     Value="false" />
        <Setter Property="Focusable"
     Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"
TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
     Value="True" />
        <Setter Property="OverridesDefaultStyle"
     Value="true" />
        <Setter Property="IsTabStop"
     Value="false" />
        <Setter Property="Focusable"
     Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4"
                 Background="{DynamicResource ScrollBarColor}"
                 BorderThickness="0"
                 Width="8"
                 Margin="8,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHor"
TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
     Value="True" />
        <Setter Property="OverridesDefaultStyle"
     Value="true" />
        <Setter Property="IsTabStop"
     Value="false" />
        <Setter Property="Focusable"
     Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4"
                 Background="{DynamicResource ScrollBarColor}"
                 BorderThickness="0"
                 Height="8"
                 Margin="0,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
          TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="0" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
         CornerRadius="2"
         Background="Transparent" />
            <RepeatButton Grid.Row="0"
               Style="{StaticResource ScrollBarLineButton}"
               Height="18"
               Command="ScrollBar.LineUpCommand"
               Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track"
        Grid.Row="1"
        IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                       Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                Margin="1,0,1,0"
                Background="{DynamicResource ScrollBarColor}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                       Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
               Style="{StaticResource ScrollBarLineButton}"
               Height="18"
               Command="ScrollBar.LineDownCommand"
               Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
          TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition Width="0" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
         CornerRadius="3"
         Background="Transparent" />
            <RepeatButton Grid.Column="0"
               Style="{StaticResource ScrollBarLineButton}"
               Width="18"
               Command="ScrollBar.LineLeftCommand"
               Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
        Grid.Column="1"
        IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                       Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHor}"
                Margin="0,1,0,1"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                       Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
               Style="{StaticResource ScrollBarLineButton}"
               Width="18"
               Command="ScrollBar.LineRightCommand"
               Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
     Value="True" />
        <Setter Property="OverridesDefaultStyle"
     Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
          Value="Horizontal">
                <Setter Property="Width"
             Value="Auto" />
                <Setter Property="Height"
             Value="12" />
                <Setter Property="Template"
             Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
          Value="Vertical">
                <Setter Property="Width"
             Value="18" />
                <Setter Property="Height"
             Value="Auto" />
                <Setter Property="Template"
             Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer"
TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle"
     Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                        Value="{TemplateBinding VerticalOffset}"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                        Orientation="Horizontal"
                        Grid.Row="1"
                        Grid.Column="1"
                        Value="{TemplateBinding HorizontalOffset}"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                        Grid.Row="0"
                        Grid.Column="1"
                        Value="{TemplateBinding VerticalOffset}"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                        Orientation="Horizontal"
                        Grid.Row="1"
                        Grid.Column="0"
                        Value="{TemplateBinding HorizontalOffset}"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>